#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>

//Tugas1_ASD_G_672019171
//Ivan Andika Surya (672019171)
//17 Februari 2021

struct data{ //struct
    char* name[30];
    int nim;
    int ipk;
    };

void main(){ //main
    int i, j, save1, save2;
	int pilih = 0, jml = 2;
    int identifier = 0;
    struct data arr_tampung[jml];
    char *temp = (char *)malloc((strlen(arr_tampung[i].name) + 1) * sizeof(char));
    
	menuuu: //menu
		system("cls");
		printf(" ========================================\n");
		printf(" ==================MENU==================\n");
		printf(" ========================================\n\n");
		printf(" 1. Input Data\n");
		printf(" 2. Lihat Data Terkini\n");
		printf(" 3. Sorting Data\n");
		printf(" 4. Search Data\n");
		printf(" Silakan masukkan pilihan anda : ");
		scanf("%d", &pilih);
		
	switch (pilih){
		case 1:{ //Input Data
			system("cls");
			printf(" ========================================\n");
			printf(" ===============INPUT DATA===============\n");
			printf(" ========================================\n\n");
			for(i = 0; i < jml; i++){	
       	 		printf(" Masukkan data mahasiswa ke %d\n", i+1);
        		printf(" Masukkan nama\t: ");
            		fflush(stdin);
            		gets(arr_tampung[i].name);
        		printf(" Masukkan nim\t: ");
        		scanf("%d", &arr_tampung[i].nim);
        		ulang:
        		printf(" Masukkan ipk\t: ");
        		scanf("%d", &arr_tampung[i].ipk);
        		if(arr_tampung[i].ipk <= 0 || arr_tampung[i].ipk > 4){
        			printf(" IPK yang anda masukkan belum valid. (0-4)\n\n ");
        			system("pause");
        			goto ulang;
					}
        		printf("\n");
        	}
        	printf(" Data berhasil di input.");
        	identifier = 1;
        	printf("\n\n ");
			system("pause");
			system("cls");
			goto menuuu;
		}
		
		case 2:{ //Lihat Data Terkini
			if (identifier == 0){
				printf("\n Anda belum memasukkan data!\n\n ");
				system("pause");
				system("cls");
				goto menuuu;
			}
			else if (identifier == 1){
				for(i = 0; i < jml; i++){
        			printf("\n Nama\t: %s\n NIM\t: %d\n Nilai\t: %d", arr_tampung[i].name, arr_tampung[i].nim, arr_tampung[i].ipk);
        			printf("\n");
        			}
        		printf("\n ");
				system("pause");
				system("cls");
				goto menuuu;
				}
			}
			
		case 3:{ //Sort menggunakan Selection Sort
			int sort = 0;
			system("cls");
				printf(" ========================================\n");
				printf(" ==================SORT==================\n");
				printf(" ========================================\n\n");
				printf(" 1. Sort berdasar nilai\n");
				printf(" 2. Sort berdasarkan nim\n");
				printf(" 3. Sort berdasarkan abjad\n");
				printf(" 4. Kembali ke menu utama\n");
				printf(" Silakan masukkan pilihan anda : ");
				scanf("%d", &sort);
				
			switch (sort){
				case 1:{
					//sorting ipk
    				for (i = 0; i < jml-1; i++){
        				for (j = i; j < jml; j++){
            				if (arr_tampung[i].ipk > arr_tampung[j].ipk){
                				save1 = arr_tampung[i].nim;
                				save2 = arr_tampung[i].ipk;

                				arr_tampung[i].nim = arr_tampung[j].nim;
                				arr_tampung[i].ipk = arr_tampung[j].ipk;

                				arr_tampung[j].nim = save1;
                				arr_tampung[j].ipk = save2;

                				strcpy(temp, arr_tampung[i].name);
                				strcpy(arr_tampung[i].name, arr_tampung[j].name);
                				strcpy(arr_tampung[j].name, temp);
            				}
        				}
    				}
    				printf("\n Data setelah sorting IPK adalah :\n");
    				for(i = 0; i < jml; i++){
        				printf(" Nama\t: %s\n NIM\t: %d\n Nilai\t: %d", arr_tampung[i].name, arr_tampung[i].nim, arr_tampung[i].ipk);
        				printf("\n\n");
    					}
    				printf(" ");
    				system("pause");
					system("cls");
					goto menuuu;
				}
				case 2:{
					//sorting nim
    				for (i = 0; i < jml-1; i++){
        				for (j = i; j < jml; j++){
            				if (arr_tampung[i].nim > arr_tampung[j].nim){
                				save1 = arr_tampung[i].nim;
                				save2 = arr_tampung[i].ipk;

                				arr_tampung[i].nim = arr_tampung[j].nim;
                				arr_tampung[i].ipk = arr_tampung[j].ipk;

                				arr_tampung[j].nim = save1;
                				arr_tampung[j].ipk = save2;

                				strcpy(temp, arr_tampung[i].name);
                				strcpy(arr_tampung[i].name, arr_tampung[j].name);
                				strcpy(arr_tampung[j].name, temp);
            				}
        				}
    				}
    				printf("\n Data setelah sorting NIM adalah :\n");
    				for(i = 0; i < jml; i++){
        				printf(" Nama\t: %s\n NIM\t: %d\n Nilai\t: %d", arr_tampung[i].name, arr_tampung[i].nim, arr_tampung[i].ipk);
        				printf("\n\n");
    					}
    				printf(" ");
    				system("pause");
					system("cls");
					goto menuuu;
				}
				case 3:{
					//sorting name
    				for (i = 0; i < jml-1; i++){
        				for (j = i; j < jml; j++){
            				if (strcmp(arr_tampung[i].name, arr_tampung[j].name) > 0){
                				save1 = arr_tampung[i].nim;
                				save2 = arr_tampung[i].ipk;

                				arr_tampung[i].nim = arr_tampung[j].nim;
                				arr_tampung[i].ipk = arr_tampung[j].ipk;

                				arr_tampung[j].nim = save1;
                				arr_tampung[j].ipk = save2;

                				strcpy(temp, arr_tampung[i].name);
                				strcpy(arr_tampung[i].name, arr_tampung[j].name);
                				strcpy(arr_tampung[j].name, temp);
            				}
        				}
    				}
    				printf("\n Data setelah sorting NIM adalah :\n");
    				for(i = 0; i < jml; i++){
        				printf(" Nama\t: %s\n NIM\t: %d\n Nilai\t: %d", arr_tampung[i].name, arr_tampung[i].nim, arr_tampung[i].ipk);
        				printf("\n\n");
    					}
    				printf(" ");
    				system("pause");
					system("cls");
					goto menuuu;
				}
				case 4:{
					system("cls");
					goto menuuu;
				}
			}	
		}
		
		case 4:{ //search menggunakan Squential Search
			int searchnim, searchipk, search = 0;
			system("cls");
				printf(" ========================================\n");
				printf(" =================SEARCH=================\n");
				printf(" ========================================\n\n");
				printf(" 1. Search nim\n");
				printf(" 2. Search ipk\n");
				printf(" 3. Search nama\n");
				printf(" 4. Kembali ke menu utama\n");	
				printf(" Silakan masukkan pilihan anda : ");
				scanf("%d", &search);
			
			switch (search){
				case 1:{
					printf(" Silakan masukkan nim yang dicari : ");
					scanf("%d", &searchnim);
					for(i = 0; i < jml; i++){
        				if (arr_tampung[i].nim == searchnim){
        					printf("\n Data yang anda cari adalah sebagai berikut.\n");
        					printf(" Nama\t: %s\n NIM\t: %d\n Nilai\t: %d\n\n ", arr_tampung[i].name, arr_tampung[i].nim, arr_tampung[i].ipk);
						system("pause");
						goto menuuu;
						}
					}
				}
				case 2:{
					printf(" Silakan masukkan nim yang dicari : ");
					scanf("%d", &searchipk);
					for(i = 0; i < jml; i++){
        				if (arr_tampung[i].ipk == searchipk){
        					printf("\n Data yang anda cari adalah sebagai berikut.\n");
        					printf(" Nama\t: %s\n NIM\t: %d\n Nilai\t: %d\n\n ", arr_tampung[i].name, arr_tampung[i].nim, arr_tampung[i].ipk);
						system("pause");
						goto menuuu;
						}
					}
				}
				case 3:{
					break;
				}
				case 4:{
					system("cls");
					goto menuuu;
				}
			}
		}
	}
}
